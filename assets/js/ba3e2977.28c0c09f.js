"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([[245],{4137:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),g=u(r),d=a,m=g["".concat(i,".").concat(d)]||g[d]||c[d]||o;return r?n.createElement(m,l(l({ref:t},s),{},{components:r})):n.createElement(m,l({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[g]="string"==typeof e?e:a,l[1]=p;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7105:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var n=r(7462),a=(r(7294),r(4137));const o={},l="Group",p={unversionedId:"grouping/group",id:"grouping/group",title:"Group",description:"We can sum all the pages for all books in each year:",source:"@site/docs/70-grouping/group.mdx",sourceDirName:"70-grouping",slug:"/grouping/group",permalink:"/aggregation-pipeline-lab/docs/grouping/group",draft:!1,editUrl:"https://github.com/mongodb-developer/aggregation-pipeline-lab/blob/main/docs/70-grouping/group.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Grouping results",permalink:"/aggregation-pipeline-lab/docs/category/grouping-results"},next:{title:"Modifying results",permalink:"/aggregation-pipeline-lab/docs/category/modifying-results"}},i={},u=[],s={toc:u},g="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(g,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"group"},"Group"),(0,a.kt)("p",null,"We can sum all the pages for all books in each year:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'db.books.aggregate([\n    {$group:{\n        _id: "$year",\n        totalPages: {$sum: "$pages"}\n    }}\n])\n')),(0,a.kt)("p",null,"Here, we group by book's ",(0,a.kt)("inlineCode",{parentName:"p"},"year")," (the _id of the grouping), and then we create a new field called ",(0,a.kt)("inlineCode",{parentName:"p"},"totalPages")," that's the sum of all pages."),(0,a.kt)("p",null,"\ud83d\udcbb Can you get the results ordered ascending by year?"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Answer"),(0,a.kt)("div",null,(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'db.books.aggregate([\n    {$group:{\n        _id: "$year",\n        totalPages: {$sum: "$pages"}\n    }},\n    {$sort: {_id: 1}}\n])\n')))),(0,a.kt)("p",null,"\ud83d\udcbb Can you get the average pages per year (hint: use ",(0,a.kt)("inlineCode",{parentName:"p"},"$avg"),")?"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Answer"),(0,a.kt)("div",null,(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'db.books.aggregate([\n    {$group:{\n        _id: "$year",\n        totalPages: {$avg: "$pages"}\n    }},\n    {$sort: {_id: 1}}\n])\n')))),(0,a.kt)("p",null,"\ud83d\udcbb Which year had the most printed out pages?"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Answer"),(0,a.kt)("div",null,(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'db.books.aggregate([\n    {$group:{\n        _id: "$year",\n        totalPages: {$sum: "$pages"}\n    }},\n    {$sort: {totalPages: -1}},\n    {$limit: 1}\n])\n')))))}c.isMDXComponent=!0}}]);