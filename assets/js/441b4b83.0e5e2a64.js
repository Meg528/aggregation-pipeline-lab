"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([[356],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,y=p["".concat(l,".").concat(m)]||p[m]||g[m]||o;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7604:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(4137));const o={},i="$match in arrays",s={unversionedId:"using-arrays/matching-arrays",id:"using-arrays/matching-arrays",title:"$match in arrays",description:"In our books we're using the Attribute Pattern to have different attributes in our documents. As we can see in the sample doc we have an attributes array with different fields:",source:"@site/docs/50-using-arrays/1-matching-arrays.mdx",sourceDirName:"50-using-arrays",slug:"/using-arrays/matching-arrays",permalink:"/aggregation-workshop/docs/using-arrays/matching-arrays",draft:!1,editUrl:"https://github.com/mongodb-developer/aggregation-workshop/blob/main/docs/50-using-arrays/1-matching-arrays.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using Arrays",permalink:"/aggregation-workshop/docs/category/using-arrays"},next:{title:"\ud83d\udcd8 Lecture material",permalink:"/aggregation-workshop/docs/lecture-material"}},l={},c=[],u={toc:c},p="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"match-in-arrays"},"$match in arrays"),(0,a.kt)("p",null,"In our books we're using the ",(0,a.kt)("a",{parentName:"p",href:"https://www.mongodb.com/developer/products/mongodb/attribute-pattern/"},"Attribute Pattern")," to have different attributes in our documents. As we can see in the ",(0,a.kt)("a",{parentName:"p",href:"/docs/simple-queries/project"},"sample doc")," we have an ",(0,a.kt)("inlineCode",{parentName:"p"},"attributes")," array with different fields:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"attributes: [\n    {\n      key: 'publisher',\n      value: 'Longman'\n    },\n    {\n      key: 'language',\n      value: 'en'\n    },\n    {\n      key: 'image',\n      value: 'https://images.isbndb.com/covers/44/65/9780452264465.jpg'\n    },\n    {\n      key: 'title_long',\n      value: 'Beloved (Plume Contemporary Fiction)'\n    },\n    {\n      key: 'edition',\n      value: 'Reissue'\n    },\n    {\n      key: 'dimensions',\n      value: 'Height: 8 Inches, Length: 5.46 Inches, Weight: 0.57981574906 Pounds, Width: 0.67 Inches'\n    },\n    {\n      key: 'date_published',\n      value: '1998'\n    },\n    {\n      key: 'isbn13',\n      value: '9780452264465'\n    },\n    {\n      key: 'msrp',\n      value: 6.67\n    },\n    {\n      key: 'binding',\n      value: 'Paperback'\n    },\n    ...\n  ],\n")),(0,a.kt)("p",null,"How do we search for all the Paperback books? Turns out is this simple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let paperbackBooks = {$match: {"attributes.value": \'Paperback\'}};\nlet showOnlyTheseFields = {$project: {_id: 0, title: 1, year: 1, totalInventory: 1, available: 1, "attributes": 1}};\n\ndb.books.aggregate([\n    booksFrom1991With150pages,\n    showOnlyTheseFields,\n]);\n')),(0,a.kt)("p",null,'let paperbackBooks = {$match: {"author.name": \'Paperback\'}};\nlet showOnlyTheseFields = {$project: {_id: 0, title: 1, year: 1, totalInventory: 1, available: 1, "attributes": 1}};'),(0,a.kt)("p",null,"db.books.aggregate(","[\nbooksFrom1991With150pages,\nshowOnlyTheseFields,\n]",");"))}g.isMDXComponent=!0}}]);