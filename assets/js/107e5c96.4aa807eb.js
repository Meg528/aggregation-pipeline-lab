"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([[658],{4137:(e,r,a)=>{a.d(r,{Zo:()=>c,kt:()=>m});var t=a(7294);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function o(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?o(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function s(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=t.createContext({}),u=function(e){var r=t.useContext(l),a=r;return e&&(a="function"==typeof e?e(r):i(i({},r),e)),a},c=function(e){var r=u(e.components);return t.createElement(l.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(a),g=n,m=p["".concat(l,".").concat(g)]||p[g]||d[g]||o;return a?t.createElement(m,i(i({ref:r},c),{},{components:a})):t.createElement(m,i({ref:r},c))}));function m(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=g;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[p]="string"==typeof e?e:n,i[1]=s;for(var u=2;u<o;u++)i[u]=a[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},5709:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var t=a(7462),n=(a(7294),a(4137));const o={},i="Simple Array queries",s={unversionedId:"using-arrays/simple-match-array",id:"using-arrays/simple-match-array",title:"Simple Array queries",description:"Find data in arrays",source:"@site/docs/40-using-arrays/1-simple-match-array.mdx",sourceDirName:"40-using-arrays",slug:"/using-arrays/simple-match-array",permalink:"/aggregation-workshop/docs/using-arrays/simple-match-array",draft:!1,editUrl:"https://github.com/mongodb-developer/aggregation-workshop/blob/main/docs/40-using-arrays/1-simple-match-array.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using Arrays",permalink:"/aggregation-workshop/docs/category/using-arrays"},next:{title:"Searching inside Objects in arrays",permalink:"/aggregation-workshop/docs/using-arrays/search-inside-objects-in-arrays"}},l={},u=[{value:"Find data in arrays",id:"find-data-in-arrays",level:2},{value:"Size of an array",id:"size-of-an-array",level:2}],c={toc:u},p="wrapper";function d(e){let{components:r,...a}=e;return(0,n.kt)(p,(0,t.Z)({},c,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"simple-array-queries"},"Simple Array queries"),(0,n.kt)("h2",{id:"find-data-in-arrays"},"Find data in arrays"),(0,n.kt)("p",null,"A JSON Array can contain scalar values or objects. In our data, ",(0,n.kt)("inlineCode",{parentName:"p"},"authors")," have an array of the books they've authored (their ISBNs). Let's get one author:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"db.authors.aggregate([{$limit: 1}])\n")),(0,n.kt)("p",null,"\ud83d\udcbb Run this aggregation to get one author"),(0,n.kt)("p",null,"I got this one (can change depending on the data source you imported)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"{\n  _id: ObjectId(\"64cc2db4830ba29148da4c3b\"),\n  name: 'Richard Bruce Wright',\n  sanitizedName: 'richardbrucewright',\n  books: [\n    '0002005018',\n    '0771597185'\n  ],\n  aliases: [\n    'Wright, Richard Bruce'\n  ]\n}\n")),(0,n.kt)("p",null,"Can I get all authors for book ",(0,n.kt)("inlineCode",{parentName:"p"},"0002005018"),"? For that, I want all authors that have ",(0,n.kt)("inlineCode",{parentName:"p"},"0002005018")," inside the ",(0,n.kt)("inlineCode",{parentName:"p"},"books")," array. Turns out it's quite simple:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'db.authors.aggregate([\n    {$match: {books: "0002005018"}}\n])\n')),(0,n.kt)("p",null,"\ud83d\udcbb Get book's author name for ISBN ",(0,n.kt)("inlineCode",{parentName:"p"},"9780439139595"),":"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Answer"),(0,n.kt)("div",null,(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"db.authors.aggregate([{$match: {books: \"9780439139595\"}}])\n\n>   name: 'J.K. Rowling',\n")))),(0,n.kt)("h2",{id:"size-of-an-array"},"Size of an array"),(0,n.kt)("p",null,"What if we want to know how many aliases an Author has? To do that we can use ",(0,n.kt)("inlineCode",{parentName:"p"},"$size"),", adding the array field that we're interested in:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'db.authors.aggregate([\n{$project: {\n    name: 1,\n    bookCount: {$size: "$books"}\n }\n},\n])\n')),(0,n.kt)("p",null,"\ud83d\udcbb Who wrote the most books?"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Answer"),(0,n.kt)("div",null,(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'let addNumberBooks = {\n    $project: {\n        name: 1,\n        bookCount: {$size: "$books"}\n    }\n}\n\nlet orderByNumberOfBooksDesc = { $sort: {"bookCount": -1}}\n\nlet getOne = {$limit: 1}\n\ndb.authors.aggregate([\n    \n    addNumberBooks,\n    orderByNumberOfBooksDesc,\n    getOne,\n])\n')))))}d.isMDXComponent=!0}}]);