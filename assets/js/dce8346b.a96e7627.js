"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([[733],{4137:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function g(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=g(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var g={};for(var s in t)hasOwnProperty.call(t,s)&&(g[s]=t[s]);g.originalType=e,g[c]="string"==typeof e?e:a,i[1]=g;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2423:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>g,toc:()=>p});var n=r(7462),a=(r(7294),r(4137));const o={},i="What is an Aggregation Pipeline",g={unversionedId:"what-is-aggregation/what-is-aggregation",id:"what-is-aggregation/what-is-aggregation",title:"What is an Aggregation Pipeline",description:"Similar to a unix pipe",source:"@site/docs/20-what-is-aggregation/1-what-is-aggregation.mdx",sourceDirName:"20-what-is-aggregation",slug:"/what-is-aggregation/what-is-aggregation",permalink:"/aggregation-workshop/docs/what-is-aggregation/what-is-aggregation",draft:!1,editUrl:"https://github.com/mongodb-developer/aggregation-workshop/blob/main/docs/20-what-is-aggregation/1-what-is-aggregation.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The Aggregation Pipeline",permalink:"/aggregation-workshop/docs/category/the-aggregation-pipeline"},next:{title:"SQL vs Aggregations",permalink:"/aggregation-workshop/docs/what-is-aggregation/sql-vs-aggregation"}},s={},p=[],l={toc:p},c="wrapper";function u(e){let{components:t,...o}=e;return(0,a.kt)(c,(0,n.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"what-is-an-aggregation-pipeline"},"What is an Aggregation Pipeline"),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(8379).Z,width:"1280",height:"720"})),(0,a.kt)("p",null,"Similar to a unix pipe\nConstruct modular, composable processing pipelines"),(0,a.kt)("p",null,"An aggregation pipeline consists of one or more stages that process documents:"),(0,a.kt)("p",null,"Each stage performs an operation on the input documents. For example, a stage can filter documents, group documents, and calculate values."),(0,a.kt)("p",null,"The documents that are output from a stage are passed to the next stage."),(0,a.kt)("p",null,"An aggregation pipeline can return results for groups of documents. For example, return the total, average, maximum, and minimum values."))}u.isMDXComponent=!0},8379:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/aggregation-pipeline-6e987949a77bb367ac0f107c459db15a.png"}}]);