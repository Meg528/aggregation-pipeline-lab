"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([[237],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,m=p["".concat(l,".").concat(d)]||p[d]||g[d]||a;return n?o.createElement(m,i(i({ref:t},u),{},{components:n})):o.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9213:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(7462),r=(n(7294),n(4137));const a={},i="$count",s={unversionedId:"counting-sorting/counting-documents",id:"counting-sorting/counting-documents",title:"$count",description:"How can we be sure that this pipeline is returning exactly 10 books?",source:"@site/docs/40-counting-sorting/1-counting-documents.mdx",sourceDirName:"40-counting-sorting",slug:"/counting-sorting/counting-documents",permalink:"/aggregation-workshop/docs/counting-sorting/counting-documents",draft:!1,editUrl:"https://github.com/mongodb-developer/aggregation-workshop/blob/main/docs/40-counting-sorting/1-counting-documents.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Counting and Sorting",permalink:"/aggregation-workshop/docs/category/counting-and-sorting"},next:{title:"Sorting",permalink:"/aggregation-workshop/docs/counting-sorting/sorting"}},l={},c=[],u={toc:c},p="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"count"},"$count"),(0,r.kt)("p",null,"How can we be sure that this pipeline is returning exactly 10 books?"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let booksFrom1991With150pages = {$match: {year: 1991, pages: 150}};\nlet showOnlyTheseFields = {$project: {_id: 0, title: 1, year: 1, totalInventory: 1, available: 1}};\nlet getJust15books =  {$limit: 10};\n\ndb.books.aggregate([\n    booksFrom1991With150pages,\n    showOnlyTheseFields,\n    getJust15books\n]);\n")),(0,r.kt)("p",null,"Counting the books! Let's add a new stage to the pipeline to count those books:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let booksFrom1991With150pages = {$match: {year: 1991, pages: 150}};\nlet showOnlyTheseFields = {$project: {_id: 0, title: 1, year: 1, totalInventory: 1, available: 1}};\nlet getJust15books =  {$limit: 10};\nlet count = {$count: "totalBooks"}\n\ndb.books.aggregate([\n    booksFrom1991With150pages,\n    showOnlyTheseFields,\n    getJust15books,\n    count,\n]);\n')),(0,r.kt)("p",null,"Here, ",(0,r.kt)("inlineCode",{parentName:"p"},"$count")," will count the resulting docs and will return a document with just one field: ",(0,r.kt)("inlineCode",{parentName:"p"},"totalBooks")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  totalBooks: 10\n}\n")),(0,r.kt)("p",null,'let booksFrom1991With150pages = {$match: {year: 1991, pages: 150}};\nlet showOnlyTheseFields = {$project: {_id: 0, title: 1, year: 1, totalInventory: 1, available: 1}};\nlet getJust15books =  {$limit: 10};\nlet count = {$count: "totalBooks"}'),(0,r.kt)("p",null,"db.books.aggregate(","[\nbooksFrom1991With150pages,\ncount,\nshowOnlyTheseFields,\ngetJust15books,\n]",");"))}g.isMDXComponent=!0}}]);