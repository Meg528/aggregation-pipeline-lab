"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([[346],{4137:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function g(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=g(e,["components","mdxType","originalType","parentName"]),c=l(n),m=a,d=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var g={};for(var p in t)hasOwnProperty.call(t,p)&&(g[p]=t[p]);g.originalType=e,g[c]="string"==typeof e?e:a,i[1]=g;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3386:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>g,toc:()=>l});var r=n(7462),a=(n(7294),n(4137));const o={description:"See the parts that compose an Aggregation Pipeline"},i="Structure of an aggregation pipeline",g={unversionedId:"what-is-aggregation/structure-aggregation",id:"what-is-aggregation/structure-aggregation",title:"Structure of an aggregation pipeline",description:"See the parts that compose an Aggregation Pipeline",source:"@site/docs/20-what-is-aggregation/3-structure-aggregation.mdx",sourceDirName:"20-what-is-aggregation",slug:"/what-is-aggregation/structure-aggregation",permalink:"/aggregation-workshop/docs/what-is-aggregation/structure-aggregation",draft:!1,editUrl:"https://github.com/mongodb-developer/aggregation-workshop/blob/main/docs/20-what-is-aggregation/3-structure-aggregation.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{description:"See the parts that compose an Aggregation Pipeline"},sidebar:"tutorialSidebar",previous:{title:"SQL vs Aggregations",permalink:"/aggregation-workshop/docs/what-is-aggregation/sql-vs-aggregation"},next:{title:"Simple queries",permalink:"/aggregation-workshop/docs/category/simple-queries"}},p={},l=[{value:"Example",id:"example",level:2}],s={toc:l},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"structure-of-an-aggregation-pipeline"},"Structure of an aggregation pipeline"),(0,a.kt)("p",null,"To interact with a relational database we typically use SQL, a 4th Generation language to access our data. With MongoDB we instead get data and transform it in incremental steps."),(0,a.kt)("p",null,"An aggregation pipeline is composed of ",(0,a.kt)("a",{parentName:"p",href:"https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/"},(0,a.kt)("strong",{parentName:"a"},"stages")),"."),(0,a.kt)("p",null,"We pass an array of stages to the ",(0,a.kt)("inlineCode",{parentName:"p"},"aggregate")," method like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"db.mycollection.aggregate([\n    stage1,\n    stage2,\n    stage3\n])\n")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"An Aggregation Pipeline that does the same than above SQL statement could be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'db.mycollection.aggregate([\n  {\n    $sort:\n      /**\n       * Provide any number of field/order pairs.\n       */\n      {\n        num_mflix_comments: -1,\n      },\n  },\n  {\n    $limit:\n      /**\n       * Provide the number of documents to limit.\n       */\n      1,\n  },\n  {\n    $unwind:\n      /**\n       * path: Path to the array field.\n       * includeArrayIndex: Optional name for index.\n       * preserveNullAndEmptyArrays: Optional\n       *   toggle to unwind null and empty values.\n       */\n      {\n        path: "$cast",\n      },\n  },\n  {\n    $project:\n      /**\n       * Specifications: The fields to\n       *   include or exclude.\n       */\n      {\n        cast: 1,\n      },\n  },\n])\n')))}u.isMDXComponent=!0}}]);