"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([[426],{4137:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||r;return n?o.createElement(h,i(i({ref:t},d),{},{components:n})):o.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2950:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=n(7462),a=(n(7294),n(4137));const r={},i="\ud83e\uddb8\u200d\u2642\ufe0f Advanced lookups",l={unversionedId:"lookups/advanced-lookups",id:"lookups/advanced-lookups",title:"\ud83e\uddb8\u200d\u2642\ufe0f Advanced lookups",description:"Extra activity, do it if you have extra time or are following at home, won't be covered during the hands-on Lab",source:"@site/docs/60-lookups/2-advanced-lookups.mdx",sourceDirName:"60-lookups",slug:"/lookups/advanced-lookups",permalink:"/aggregation-workshop/docs/lookups/advanced-lookups",draft:!1,editUrl:"https://github.com/mongodb-developer/aggregation-workshop/blob/main/docs/60-lookups/2-advanced-lookups.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lookupups AKA Left Outer Join",permalink:"/aggregation-workshop/docs/lookups/lookups"},next:{title:"Grouping results",permalink:"/aggregation-workshop/docs/category/grouping-results"}},s={},p=[],d={toc:p},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\ufe0f-advanced-lookups"},"\ud83e\uddb8\u200d\u2642\ufe0f Advanced lookups"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Extra activity, do it if you have extra time or are following at home, won't be covered during the hands-on Lab")),(0,a.kt)("p",null,"We get this request: Write a ",(0,a.kt)("inlineCode",{parentName:"p"},"$lookup")," to get ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"bio")," from author's information inside each book document. To get this done, we need to review several things:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"each book can have several authors. This many to many relationship (as an author can also write many books) is modelled using two different arrays: a ",(0,a.kt)("inlineCode",{parentName:"li"},"books")," array in the ",(0,a.kt)("inlineCode",{parentName:"li"},"authors")," collection and an ",(0,a.kt)("inlineCode",{parentName:"li"},"authors")," array in the ",(0,a.kt)("inlineCode",{parentName:"li"},"books")," collection."),(0,a.kt)("li",{parentName:"ul"},"so we'll need to get a separate document for each book that has more than one author. If a book has three authors we'll use ",(0,a.kt)("inlineCode",{parentName:"li"},"$unwind")," to get three documents with the same data except for the author, that will be each of the three authors.")),(0,a.kt)("p",null,"You can try this with this Aggregation Pipeline:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'db.books.aggregate([\n    // as a book can have many authors, we get one doc per book\'s author\n    {$unwind: "$authors"},\n    // remove some noisy fields\n    {$project: {vectorizedSynopsis: 0, attributes: 0, reviews: 0}}\n])\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"now, we need to get the authors'information. For that, we'll use ",(0,a.kt)("inlineCode",{parentName:"li"},"$lookup"),", linking the ",(0,a.kt)("inlineCode",{parentName:"li"},"_id")," in the ",(0,a.kt)("inlineCode",{parentName:"li"},"authors")," collection with the ",(0,a.kt)("inlineCode",{parentName:"li"},"_id")," we have in each book's ",(0,a.kt)("inlineCode",{parentName:"li"},"authors")," array. But as we can see here, these have a different type: the ones inside our array are Strings, while the ",(0,a.kt)("inlineCode",{parentName:"li"},"author")," collection ",(0,a.kt)("inlineCode",{parentName:"li"},"_id")," are ",(0,a.kt)("inlineCode",{parentName:"li"},"ObjectId"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"  authors: {\n    _id: '64cc2db4830ba29148da64a2',\n    name: 'Timothy Findley'\n  },\n")),(0,a.kt)("p",null,"So we need to convert from ",(0,a.kt)("inlineCode",{parentName:"p"},"String")," into ",(0,a.kt)("inlineCode",{parentName:"p"},"ObjectId"),". We can do that using ",(0,a.kt)("inlineCode",{parentName:"p"},"$toObjectId"),". This will add a new field ",(0,a.kt)("inlineCode",{parentName:"p"},"authorId")," converting it into ",(0,a.kt)("inlineCode",{parentName:"p"},"ObjectId"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'db.books.aggregate([\n    // as a book can have many authors, we get one doc per book\'s author\n    {$unwind: "$authors"},\n    // convert it to an objectId\n    {"$set":{"authorId":{"$toObjectId":"$authors._id"}}},\n    // remove some noisy fields\n    {$project: {vectorizedSynopsis: 0, attributes: 0, reviews: 0}}\n])\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"now we're ready to do the ",(0,a.kt)("inlineCode",{parentName:"li"},"$lookup"),": we want all documents from ",(0,a.kt)("inlineCode",{parentName:"li"},"authors")," that have the same ",(0,a.kt)("inlineCode",{parentName:"li"},"_id")," as the ",(0,a.kt)("inlineCode",{parentName:"li"},"authorId")," we just created. We use a ",(0,a.kt)("inlineCode",{parentName:"li"},"pipeline")," to get just ",(0,a.kt)("inlineCode",{parentName:"li"},"authors")," ",(0,a.kt)("inlineCode",{parentName:"li"},"name")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"bio"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'db.books.aggregate([\n    // as a book can have many authors, we get one doc per book\'s author\n    {$unwind: "$authors"},\n    // convert it to an objectId\n    {"$set":{"authorId":{"$toObjectId":"$authors._id"}}},\n    {$lookup: {\n       from: "authors",\n       localField: "authorId",\n       foreignField: "_id",\n       pipeline: [\n            {$project: {name: 1, bio: 1}},\n       ],\n       as: "bookAuthorDetails"\n     } \n    },\n    // remove some noisy fields\n    {$project: {vectorizedSynopsis: 0, attributes: 0, reviews: 0}}\n])\n')))}c.isMDXComponent=!0}}]);